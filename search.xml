<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>a003. 兩光法師占卜術</title>
    <url>/a003-%E5%85%A9%E5%85%89%E6%B3%95%E5%B8%AB%E5%8D%A0%E5%8D%9C%E8%A1%93/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a003">https://zerojudge.tw/ShowProblem?problemid=a003</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>偵測輸入的出生年月日，依照題目指示得到S值後，再依照S值的範圍輸出相對應的輸出。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>if_else條件句和if條件句的差別在於，if條件句的每一項條件都是獨立判斷，也就是說符合第一句if條件句的情況，也可能符合第二句if條件句；而if_else條件句的每一項條件彼此之間成互斥關係，也就是說同一個情況不可能同時符合兩句if_else條件句。兩者判斷的情況看似差別不大，但善用if_else條件句可以讓程式碼的語意更加清楚，方便自己和他人閱讀！</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> M, D, S;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;M, &amp;D);</span><br><span class="line">    S=(M*<span class="number">2</span>+D)%<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span>(S==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;普通&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(S == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;吉&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(S　== <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;大吉&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a001. 哈囉</title>
    <url>/a001-%E5%93%88%E5%9B%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a001">https://zerojudge.tw/ShowProblem?problemid=a001</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先使用scanf()函數讀取輸入的字串，再使用printf()函數輸出相對應的字串。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>大家或許已經注意到了，有時scanf()函數的變數名稱後面會加上&amp;，有時卻不會，這其實與變數的型態有關。變數依據宣告的位置，可分為全域變數與區域變數。全域變數是宣告在主程式，或甚至主程式之外的變數，可以在所有地方存取或修改值；區域變數是在特定程式區塊，如迴圈或函數等內部宣告的變數，只能在其宣告的程式區塊以內使用。若是其他程式區塊也需使用此變數，必須在變數名稱前加&amp;，表示取得這個變數的位址，進而使用此變數。</p>
<p>以scanf()函數來說，因為其所使用的變數並未在在函數內宣告，屬於區域變數，因此使用時通常須在變數名稱前加&amp;，也就是指定變數的位址作為儲存空間來存放輸入。但在所有資料型態中，字串是特例，因為字串在C語言裡就是以空字元\0結尾的字元陣列，符號為%s，而陣列本身即為「指標」，有興趣的人可以自行上網搜尋相關內容。至於其他資料型態的符號可以參考下表：</p>
<p><img src="https://i.imgur.com/2DXPY8W.png"></p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello, %s\n&quot;</span>, arr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a002. 簡易加法</title>
    <url>/a002-%E7%B0%A1%E6%98%93%E5%8A%A0%E6%B3%95/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a002">https://zerojudge.tw/ShowProblem?problemid=a002</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>先使用scanf()函數讀取輸入的兩個數字，再使用printf()函數輸出兩數和。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>大家或許已經注意到了，有時scanf()函數的變數名稱後面會加上&amp;，有時卻不會，這其實與變數的型態有關。變數依據宣告的位置，可分為全域變數與區域變數。全域變數是宣告在主程式，或甚至主程式之外的變數，可以在所有地方存取或修改值；區域變數是在特定程式區塊，如迴圈或函數等內部宣告的變數，只能在其宣告的程式區塊以內使用。若是其他程式區塊也需使用此變數，必須在變數名稱前加&amp;，表示取得這個變數的位址，進而使用此變數。</p>
<p>以scanf()函數來說，因為其所使用的變數並未在在函數內宣告，屬於區域變數，因此使用時通常須在變數名稱前加&amp;，也就是指定變數的位址作為儲存空間來存放輸入。但在所有資料型態中，字串是特例，因為字串在C語言裡就是以空字元\0結尾的字元陣列，符號為%s，而陣列本身即為「指標」，有興趣的人可以自行上網搜尋相關內容。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a+b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a004. 文文的求婚</title>
    <url>/a004-%E6%96%87%E6%96%87%E7%9A%84%E6%B1%82%E5%A9%9A/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a004">https://zerojudge.tw/ShowProblem?problemid=a004</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>根據閏年的規則，每4年會有一次閏年，但每100年會是平年，而每400年又會有一次閏年。因此，我們可以利用取餘數的方式判斷輸入的年份是否能被4、100和400整除，進而判斷其是否為閏年。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用<a href="https://www.796t.com/content/1544817994.html">EOF寫法</a>判斷程式執行的條件。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span>(year%<span class="number">4</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(year%<span class="number">100</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(year%<span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;閏年\n&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;平年\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;閏年\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;平年\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a005. Eva的回家作業</title>
    <url>/a005-Eva%E7%9A%84%E5%9B%9E%E5%AE%B6%E4%BD%9C%E6%A5%AD/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a005">https://zerojudge.tw/ShowProblem?problemid=a005</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>由題目可知輸入的數列只有等差數列或等比數列兩種可能，先用選擇結構檢查輸入之數列為等差數列還是等比數列，再依據等差數列兩相鄰項差相同、等比數列兩相鄰項比相同的性質推知第五項。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此可使用for迴圈判斷程式執行的條件。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;j);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i&lt;j ; i++) &#123;</span><br><span class="line">        <span class="type">int</span> a[<span class="number">4</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;a[<span class="number">0</span>], &amp;a[<span class="number">1</span>], &amp;a[<span class="number">2</span>], &amp;a[<span class="number">3</span>]);</span><br><span class="line">        <span class="keyword">if</span>(a[<span class="number">1</span>]-a[<span class="number">0</span>] == a[<span class="number">2</span>]-a[<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d\n&quot;</span>, a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>], a[<span class="number">3</span>], a[<span class="number">3</span>]+a[<span class="number">2</span>]-a[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">1</span>]/a[<span class="number">0</span>] == a[<span class="number">2</span>]/a[<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d\n&quot;</span>, a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>], a[<span class="number">3</span>], a[<span class="number">3</span>]*a[<span class="number">2</span>]/a[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>a010. 因數分解</title>
    <url>/a010-%E5%9B%A0%E6%95%B8%E5%88%86%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a010">https://zerojudge.tw/ShowProblem?problemid=a010</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>這題的關鍵是「因數分解」這四個字，背後所代表的計算過程。當我們在做因數分解的時候，會使用短除法，從最小的質數開始檢查。當遇到該數的因數時，就把該數除以此質數得到商數，然後再重複上述動作，直到確定商數已經不能再被此質數整除為止。重複上述動作直到商數剩下一為止，即完成因數分解。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在因數分解時，因數之間會以 * 隔開，但注意輸出結尾不會有 * 。因此，我們必須判斷甚麼時候輸出結束。而正如解題思路所說，因數分解到最後，商數會剩下一。因此，我們可以利用if條件句判斷，當商數不為一的時候再輸出 * 。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> input;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= input ; i++)</span><br><span class="line">        <span class="keyword">if</span>(input%i == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> r = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(r == <span class="number">0</span>) &#123;</span><br><span class="line">                input = input/i;</span><br><span class="line">                r = input%i;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(j == <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d^%d&quot;</span>, i, j);</span><br><span class="line">            <span class="keyword">if</span>(input != <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; * &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a013. 羅馬數字</title>
    <url>/a013-%E7%BE%85%E9%A6%AC%E6%95%B8%E5%AD%97/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a013">https://zerojudge.tw/ShowProblem?problemid=a013</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題希望我們寫出可以進行羅馬數字減法的程式。而由於電腦無法直接進行羅馬數字的運算，因此我們須先將輸入的兩組羅馬數字轉為阿拉伯數字，然後再進行運算，最後將運算後的結果再轉回羅馬數字輸出。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題會用到大量if_else條件句的用法，建議可使用<a href="https://openhome.cc/Gossip/CppGossip/switchStatement.html">switch_case條件句</a>簡化，不僅能縮短程式碼長度，方便自己和他人閱讀！</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="comment">/*將羅馬數字轉為阿拉伯數字*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">roman_to_arabic</span><span class="params">(<span class="type">char</span> roman[<span class="number">11</span>])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, arabic = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(roman[i] != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; roman[i] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span>(roman[i]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>: &#123;</span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;V&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">4</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;X&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">9</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic +=<span class="number">1</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;V&#x27;</span>: &#123;</span><br><span class="line">                arabic +=<span class="number">5</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>: &#123;</span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">40</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;C&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">90</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic +=<span class="number">10</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>: &#123;</span><br><span class="line">                arabic +=<span class="number">50</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>: &#123;</span><br><span class="line">                <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;D&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">400</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(roman[i+<span class="number">1</span>] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                    arabic +=<span class="number">900</span>;</span><br><span class="line">                    i +=<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    arabic +=<span class="number">100</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>: &#123;</span><br><span class="line">                arabic +=<span class="number">500</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;M&#x27;</span>: &#123;</span><br><span class="line">                arabic +=<span class="number">1000</span>;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arabic;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*將阿拉伯數字轉為羅馬數字*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">arabic_to_roman</span><span class="params">(<span class="type">int</span> arabic)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> roman_temp[<span class="number">15</span>] = &#123;&#125;, roman[<span class="number">11</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">1000</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">1000</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">500</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">500</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">100</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">100</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">50</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">50</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">10</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">5</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">5</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(arabic &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        roman_temp[i] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">        arabic -=<span class="number">1</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*檢查：在羅馬數字的表示法中，不會有4個相同符號並列，若有4格符號並列需用減法的思維重記。比如4在羅馬數字的表示法中是記成XI而不是IIII*/</span></span><br><span class="line">    <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span> ; roman_temp[i] != <span class="string">&#x27;\0&#x27;</span> ; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(roman_temp[i] == roman_temp[i+<span class="number">1</span>] &amp;&amp; roman_temp[i+<span class="number">1</span>] == roman_temp[i+<span class="number">2</span>] &amp;&amp; roman_temp[i+<span class="number">2</span>] == roman_temp[i+<span class="number">3</span>]) &#123;</span><br><span class="line">            <span class="keyword">switch</span>(roman_temp[i]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>: &#123;</span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;D&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;X&#x27;</span>: &#123;</span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;L&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>: &#123;</span><br><span class="line">                    <span class="keyword">if</span>(roman_temp[i<span class="number">-1</span>] == <span class="string">&#x27;V&#x27;</span>) &#123;</span><br><span class="line">                        roman[j<span class="number">-1</span>] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123;</span><br><span class="line">                        roman[j] = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">                        roman[j+<span class="number">1</span>] = <span class="string">&#x27;V&#x27;</span>;</span><br><span class="line">                        j++;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i +=<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            roman[j] = roman_temp[i];</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*輸出*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, roman);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">/*先讀取第一個字串，若為#則終止輸入，若否則將此字串複製給roman_1*/</span></span><br><span class="line">        <span class="type">char</span> test[<span class="number">10</span>];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, test);</span><br><span class="line">        <span class="keyword">if</span>(test[<span class="number">0</span>] == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="type">char</span> roman_1[<span class="number">11</span>] = &#123;&#125;, roman_2[<span class="number">11</span>] = &#123;&#125;;</span><br><span class="line">        <span class="built_in">strcpy</span>(roman_1, test);</span><br><span class="line">        <span class="comment">/*再讀取第二個字串，將此字串存到roman_2*/</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, roman_2);</span><br><span class="line">        <span class="comment">/*因電腦無法直接進行羅馬數字的計算，需先將羅馬數字轉為阿拉伯數字*/</span></span><br><span class="line">        <span class="type">int</span> arabic_1 = roman_to_arabic(roman_1), arabic_2 = roman_to_arabic(roman_2);</span><br><span class="line">        <span class="type">int</span> arabic_difference = <span class="built_in">abs</span>(arabic_1-arabic_2);</span><br><span class="line">        <span class="comment">/*若相減後的差為零，則輸出「ZERO」*/</span></span><br><span class="line">        <span class="keyword">if</span>(arabic_difference == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ZERO\n&quot;</span>);</span><br><span class="line">        <span class="comment">/*若差不為0，根據題意，需先將阿拉伯數字轉為羅馬數字再輸出*/</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            arabic_to_roman(arabic_difference);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>一切的開始</title>
    <url>/%E4%B8%80%E5%88%87%E7%9A%84%E9%96%8B%E5%A7%8B/</url>
    <content><![CDATA[<p>在高三的時候，因緣際會參與了「進階程式設計」這門課程。因為在自學程式的過程中發現網路上的程式學習資源難易不均，而有了撰寫程式解題報告的想法。之後在經過一次次活動與課程的淬鍊，對網站的內容有了更多想法，也陸續嘗試了HackMD、Medium等眾多管道。</p>
<p>兩年後的今天，noah_studying誕生了。這是一個以提供升學經驗與學習知識為定位的小站，主要著重在升大學的備考與申請經驗、各項活動的申請資訊，以及以程式為主的知識彙整。希望能幫助持續在學習路上奮鬥的人們!</p>
<p>而故事本身，還在繼續…</p>
<p><strong>感謝區</strong><br>感謝 方珮雯 老師，幫助我建立程式概念，完成人生第一份程式解題報告。<br>感謝 M_SQRT 大，協助我程式解報告的改進，給了我繼續努力的動力。</p>
]]></content>
  </entry>
  <entry>
    <title>a006. 一元二次方程式</title>
    <url>/a006-%E4%B8%80%E5%85%83%E4%BA%8C%E6%AC%A1%E6%96%B9%E7%A8%8B%E5%BC%8F/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a006">https://zerojudge.tw/ShowProblem?problemid=a006</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>求一元二次方程式的根有多種方式，舉凡配方法、十字交乘等，而這裡採用的是<a href="https://www.youtube.com/watch?v=Z0omOUKCXcg&ab_channel=%E5%9D%87%E4%B8%80%E6%95%99%E8%82%B2%E5%B9%B3%E5%8F%B0JunyiAcademy">公式解</a>。若判別式b^2^-4ac&gt;0，代表此方程式有兩相異實根(-b±√b^2^-4ac)&#x2F;2a；若判別式b^2^-4ac&#x3D;0，代表此方程式有兩相同實根(重根)(-b+√b^2^-4ac)&#x2F;2a&#x3D;(-b-√b^2^-4ac)&#x2F;2a；若判別式b^2^-4ac&lt;0，代表此方程式沒有實根。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本題中使用了sqrt()函數表示根式寫法。由於sqrt()函數並非標準函式庫裡的函數，使用前須先引用&lt;math.h&gt;函式庫。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, d, x1, x2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No real root\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        d = <span class="built_in">sqrt</span>(b*b<span class="number">-4</span>*a*c);</span><br><span class="line">        x1 = (-b+d)/(<span class="number">2</span>*a); <span class="comment">/*注意運算順序(善用())*/</span></span><br><span class="line">        x2 = (-b-d)/(<span class="number">2</span>*a);</span><br><span class="line">        <span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c&gt;<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Two different roots x1=%d , x2=%d&quot;</span>, x1, x2);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b*b<span class="number">-4</span>*a*c == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Two same roots x=%d&quot;</span>, x1);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a009. 解碼器</title>
    <url>/a009-%E8%A7%A3%E7%A2%BC%E5%99%A8/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a009">https://zerojudge.tw/ShowProblem?problemid=a009</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>所謂「把明碼的每個字元加上某一個整數K而得到密碼的字元」，指的是將原本為字串型態的明碼，經由ASCII碼轉為整數型態後，加上某一個整數K，再轉為字串型態而得到密碼。因此，我們先使用scanf()讀取輸入的明碼，存放到字元陣列arr，再經由ASCII碼轉換以後輸出，就是題目所求的密碼了。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>如何判斷輸入結束，停止讀取的動作呢？因為這裡的輸入是字串型態，而在C語言中，字串就是以空字元\0結尾的字元陣列。因此，只要讀到空字元\0，就代表字輸入已經結束了！</p>
<h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; arr[i] != <span class="string">&#x27;\0&#x27;</span> ; i++)</span><br><span class="line">        arr[i] = arr[i]<span class="number">-7</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a015. 矩陣的翻轉</title>
    <url>/a015-%E7%9F%A9%E9%99%A3%E7%9A%84%E7%BF%BB%E8%BD%89/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a015">https://zerojudge.tw/ShowProblem?problemid=a015</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>以逐個字元讀取的方式讀取輸入的二維陣列後，將其行列互換後再輸出。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>根據題意，測資檔會包含多組測資，因此需使用<a href="https://www.796t.com/content/1544817994.html">EOF寫法</a>判斷程式執行的條件。這裡需要注意的是EOF的寫法會先讀取到第一個輸入的數值，進而判斷程式是否該繼續執行，也就是說第一個輸入的數值（列數）這裡已經被讀過了!</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> test;</span><br><span class="line">     <span class="comment">/*根據題意，測資檔會包含多組矩陣資料，因此使用EOF寫法判斷程式執行的條件*/</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;test) != EOF) &#123;</span><br><span class="line">        <span class="type">int</span> row = test, column = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;column);</span><br><span class="line">        <span class="type">int</span> matrix[row][column], i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">/*讀取輸入的二維陣列*/</span></span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; row ; i++)</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">0</span> ; j &lt; column ; j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;matrix[i][j]);</span><br><span class="line">        <span class="comment">/*將輸入的二維陣列行列互換後輸出*/</span></span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; column ; j++) &#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, matrix[<span class="number">0</span>][j]);</span><br><span class="line">            <span class="comment">/*!輸出矩陣時，同列的元素間會有間隔。也就是說除了第一個元素外，每個元素前都須輸出空格*/</span></span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">1</span> ; i &lt; row ; i++)   </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, matrix[i][j]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Noah的小記1 關於創立這個網站的初衷</title>
    <url>/Noah%E7%9A%84%E5%B0%8F%E8%A8%981-%E9%97%9C%E6%96%BC%E5%89%B5%E7%AB%8B%E9%80%99%E5%80%8B%E7%B6%B2%E7%AB%99%E7%9A%84%E5%88%9D%E8%A1%B7/</url>
    <content><![CDATA[<p>從三年前第一次接觸程式，開始撰寫程式解題報告；到兩年前全心投入程式解題報告的編寫，並將內容公開上網；再到去年架設網站，並在今年將內容系統性的統整並上傳。三年來，不僅僅是技術的成長，也是心態上的突破。</p>
<p>一開始之所以會撰寫程式解題報告，是因為自己在學習程式的過程中遭遇的種種挫折。當時高三的我，在沒有任何基礎的情況下，僅憑著對程式的熱忱，毅然投入了進階程式設計課程。直到我開始在網路上尋找學習資源後，才發現坊間的素材雖多，卻多是以「幾天內學會」為目標的文章，因為過於壓縮內容，反而很難讓初學者理解。同時因為各個作者安排的進度不同，讀者不易從中途切入，往往需從頭看完整個系列教學，卻未必能得到想要的答案，也難以銜接其他參考資料。</p>
<p>因此，我把目光轉向實作導向的解題報告。解題報告既沒有順序性，也沒有進度安排，讀者可以依自己的步調決定學習的節奏，直面自己的問題並加以改善。可惜的是，當時的解題報告多以語法較簡潔的python為主，較少針對C語系。因此，在程式能力漸趨成熟後，我開始著手撰寫一份以初學者角度剖析題意，釐清解題思路，並轉化為程式碼的解題報告。或許我的程式能力並不是最強的，但正因為我曾有著這樣的經歷，更能理解初學者的想法，以及容易犯錯的地方。</p>
<p>過往我撰文時用的編輯器是HackMD，但隨著內容逐漸增加，我開始意識到系統性整理文章的的重要性，同時也希望拓展寫作的方向。因此才有了noah_studying的出現－一個以Github為平台、Node.js為環境、Hexo為框架、支援Markdown語法的靜態網站。未來noah_studying將會以提供各道題目的解題報告，以及一些活動的申請經歷與參與經驗為方向。希望藉由自己的力量，能幫助更多有相同經歷與需求的人。</p>
]]></content>
  </entry>
  <entry>
    <title>a020. 身分證檢驗</title>
    <url>/a020-%E8%BA%AB%E5%88%86%E8%AD%89%E6%AA%A2%E9%A9%97/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a020">https://zerojudge.tw/ShowProblem?problemid=a020</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>本題的題意相當複雜，大致上的意思是:</p>
<ol>
<li>偵測輸入的身分證字號。</li>
<li>將身分證字號中代表出生縣市的英文代號依照附圖的方式轉換成數字。</li>
<li>將2.的數字的個位數字乘以9倍並加上十位數字。</li>
<li>將身分證字號的數字部分由左到右分別乘上8、7、6、5、4、3、2、1、1。</li>
<li>以3.加上4.的和做為判斷標準。若能被10整除則輸出”real”，否則輸出”fake”。</li>
</ol>
<p>1.的部分並不難，但值得注意的是雖然身份證字號是整數，但因為輸入的時候各數字之間不會有空格，若用整數型態的變數儲存，整個數列會被偵測成一個整數。因此，這裡須使用字元陣列來偵測並儲存輸入的身分證字號。</p>
<p>2.的部分，由於剛剛是以字元型態讀取英文部分，我們可以先將之轉換為整數，也就是其ASCII碼，再經由常數的加減得到如附圖中的數字。乍看之下應有26個英文字母要轉換，但仔細看過後會發現其實有些英文字母的轉換是有規律的，可以善用這個規律來化簡程式碼!</p>
<p>3.的部分，運算本身並不難，較難地方在於分別取得數字的個位數和十位數。個位數可以用除10後取餘數的方式獲得，而十位數則因為在整數型態的運算中，若運算結果為小數，會自動無條件捨去至整數位，會剛好等於除10後的商。</p>
<p>4.的部分，可以看到前8位數字的倍數呈規律遞減，因此可以for迴圈的計數常數i加上常數後得到，第9位在單獨加上去就好了。</p>
<p>5.就是單純的條件判斷並輸出相對應的輸出！</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>在進行資料型態的轉換時，會以「確保轉換過程中不會有資料遺失」為原則，因此轉換後的資料型態所占記憶體空間須比原資料型態大。在符合前提的情況下，就可以直接轉換。</p>
<p>以本題的程式碼來說，因為整數型態變數所佔的記憶體空間為4位元組，比字元型態變數所佔的1位元組還大，因此字元型態的變數在遇到需要用整數型態判別或運算的時候，會自動轉為整數。嚴謹的寫法是 : (轉換後的的資料型態)變數名稱。 e.g. (int)city</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">/*!身分證字號的數字雖然是整數型態，</span></span><br><span class="line"><span class="comment">      但因為輸入的時候各數字間沒有空格，整個數列會被視為一個整數，</span></span><br><span class="line"><span class="comment">      因此需用字元陣列偵測並儲存輸入*/</span></span><br><span class="line">    <span class="type">char</span> city, num[<span class="number">10</span>]; </span><br><span class="line">    <span class="comment">/*因為整數型態所佔的記憶體空間比字元大，可確保資料型態的轉換過程中不會有資料遺失，</span></span><br><span class="line"><span class="comment">      因此字元型態的變數在遇到需要用整數型態判別或運算的時候，會自動轉為整數，即ASCII碼。</span></span><br><span class="line"><span class="comment">      嚴謹的寫法是 : (轉換後的的資料型態)變數名稱 e.g. (int)city */</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c%s&quot;</span>, &amp;city, num);</span><br><span class="line">    <span class="keyword">if</span>(city &gt;= <span class="number">65</span> &amp;&amp; city &lt;= <span class="number">72</span>) </span><br><span class="line">        city-=<span class="number">55</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">        city -=<span class="number">39</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city &gt;= <span class="number">74</span> &amp;&amp; city &lt;= <span class="number">78</span>)</span><br><span class="line">        city -=<span class="number">56</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;O&#x27;</span>)</span><br><span class="line">        city -=<span class="number">44</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city &gt;= <span class="number">80</span> &amp;&amp; city &lt;= <span class="number">86</span>)</span><br><span class="line">        city -=<span class="number">57</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">        city -=<span class="number">55</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;X&#x27;</span> || city == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">        city -=<span class="number">58</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(city == <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        city -=<span class="number">57</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sum = num[<span class="number">8</span>]<span class="number">-48</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">8</span> ; i++) <span class="comment">/*!身分證字號數字共9碼，除去最後一碼共8碼，i值最大為7*/</span></span><br><span class="line">        sum +=(num[i]<span class="number">-48</span>)*(<span class="number">8</span>-i);</span><br><span class="line">    sum +=city/<span class="number">10</span>+(city%<span class="number">10</span>)*<span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(sum%<span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;real&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fake&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a022. 迴文</title>
    <url>/a022-%E8%BF%B4%E6%96%87/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a022">https://zerojudge.tw/ShowProblem?problemid=a022</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>迴文，是指字串不論是從正向讀還是反向讀均相同，也就是說迴文字串必定頭尾對稱。因此，我們可以利用for迴圈檢查。若長度為len的字串，第i項等於第len-i-1項，就將計數變數count值+1。若count值等於len&#x2F;2，就代表該字串符合迴文的條件。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>以C語言的寫法來說，陣列的最後一項會是空字元，也就是說，如果今天有一個大小為i項的陣列，那麼它可以儲存的項數是i-1項!</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> arr[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, arr);</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(arr), count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*迴文字串必然對稱，因此只需檢查到一半即可，只要有一組頭尾不同即非迴文*/</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i &lt; len/<span class="number">2</span> ; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] == arr[len<span class="number">-1</span>-i])</span><br><span class="line">            count++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count == len/<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>a024. 最大公因數(GCD)</title>
    <url>/a024-%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B8(GCD)/</url>
    <content><![CDATA[<h2 id="題目連結"><a href="#題目連結" class="headerlink" title="題目連結"></a>題目連結</h2><p><a href="https://zerojudge.tw/ShowProblem?problemid=a024">https://zerojudge.tw/ShowProblem?problemid=a024</a></p>
<h2 id="解題思路"><a href="#解題思路" class="headerlink" title="解題思路"></a>解題思路</h2><p>求兩數最大公因數的辦法有很多種，可以將兩數個別的因數都先求出來，再取它們的交集得到最大公因數；也可以直接求兩數公因數的最大值。但本題測資的值較大，上述方法在ZeroJudge上執行時很可能會超時(TLE)。因此，建議使用<a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">輾轉相除法</a>，快速計算最大公因數。</p>
<p>輾轉相除法的概念是，兩數的最大公因數等於其中較小的數和兩數相除後的餘數的最大公因數。具體的做法是先將兩數中較大的數字除以較小的數字，基於除法運算後餘比商小的特性，可知剩下的餘一定會比原先較小的數字還小。這時原先較小的數字就成了新的運算中較大的數字，而餘則成了新的運算中較小的數字。重複運算至其中一數變成零為止，剩下的另一個數就是兩數的最大公因數。如果在看完上述文字解說後仍然無法立刻理解，可以參考<a href="https://zh.wikipedia.org/wiki/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95">維基百科上的動畫</a>，或是<a href="http://www.mathland.idv.tw/fun/euclidean.htm">昌爸工作坊提供的運算欄位列出的算式</a>，搭配實際運算或程式演示幫助理解。</p>
<h2 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h2><p>本程式碼第7、8行使用了「<a href="https://shengyu7697.github.io/cpp-ternary-operator/">條件運算子</a>」，寫法是「(條件) ？ (敘述1) ： (敘述2)」。條件運算子在程式執行時，會依據條件決定接下來的動作。如果符合條件就回傳敘述1的值，否則回傳敘述2的值。</p>
<h2 id="程式碼：C語言"><a href="#程式碼：C語言" class="headerlink" title="程式碼：C語言"></a>程式碼：C語言</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    # 宣告變數a、b，代表輸入的兩個整數</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    # 宣告變數big、small，分別代表兩數中較大和較小的數字</span><br><span class="line">    <span class="type">int</span> big = (a &gt; b) ? a : b;</span><br><span class="line">    <span class="type">int</span> small = (a &gt; b) ? b : a;</span><br><span class="line">    # 輾轉相除法：將兩數中較大的數字除以較小的數字，</span><br><span class="line">    # 原來較小的數字作為新的運算中教大的數字，餘作為新的運算中較小的數字</span><br><span class="line">    # 直到其一為<span class="number">0</span>時運算結束，剩下的數字就是兩數的最大公因數</span><br><span class="line">    <span class="keyword">while</span>(small != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp = big;</span><br><span class="line">        big = small;</span><br><span class="line">        small = temp%small;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, big);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
